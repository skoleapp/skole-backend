[tool.black]
exclude = "migrations/.*"

[tool.coverage.run]
branch = true
omit = [
    "*/migrations/*",
    "*/tests/*",
]

[tool.isort]
include_trailing_comma = true
line_length = 88
multi_line_output = 3
skip_glob = "*/migrations/*"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
addopts = "--nomigrations --doctest-modules"

[tool.pylint.messages_control]
disable = [
    "duplicate-code",
    "fixme",                   # No point in not allowing this style of comments.
    "invalid-name",            # `qs`, `db`, and `T` are all just fine names.
    "line-too-long",           # Black handles this.
    "missing-docstring",       # Just insane.
    "no-else-return",          # Can often make the code clearer.
    "no-member",               # Doesn't play well with e.g. parler translated fields.
    "redefined-builtin",       # We are using `id` and `input` as idiomatic GraphQL parameter names.
    "too-few-public-methods",  # Single method mixins can be really useful, also our `constants.py` has tons of these classes.
    "too-many-ancestors",      # Doesn't play well with our style of heavy use of mixins and multiple inheritance.
    "too-many-arguments",      # Can be judged manually, most often completely valid.
    "unsubscriptable-object",  # There's currently a bug where every `Optional[Foo]` errors: https://github.com/PyCQA/pylint/issues/3882
    "unused-argument",         # Often an argument (e.g. `root`) just has to be there even if it's not used.
]

[tool.pylint.classes]
valid-metaclass-classmethod-first-arg = "mcs"
