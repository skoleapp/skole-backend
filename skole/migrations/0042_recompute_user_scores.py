# Generated by Django 3.1.7 on 2021-03-30 12:10
# Manually edited to add the `forwards_func` and `backwards_func`.
from django.apps.registry import Apps
from django.db import migrations
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.models import QuerySet, Sum, Value
from django.db.models.functions import Coalesce

from skole.types import VotableModel

COMMENT_MULTIPLIER_OLD = 1
COMMENT_MULTIPLIER_NEW = 10
THREAD_MULTIPLIER_OLD = 10
THREAD_MULTIPLIER_NEW = 20


def _sum_votes(qs: QuerySet[VotableModel]) -> int:
    return qs.aggregate(total=Coalesce(Sum("votes__status"), Value(0)))["total"]


def _recalculate_scores(apps: Apps, comment_score: int, thread_score: int) -> None:
    User = apps.get_model("skole", "User")
    for user in User.objects.all():
        comment_votes = _sum_votes(user.comments)
        thread_votes = _sum_votes(user.created_threads)
        user.score = comment_votes * comment_score + thread_votes * thread_score
        user.save(update_fields=("score",))


def forwards_func(apps: Apps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    _recalculate_scores(apps, COMMENT_MULTIPLIER_NEW, THREAD_MULTIPLIER_NEW)


def backwards_func(apps: Apps, schema_editor: BaseDatabaseSchemaEditor) -> None:
    _recalculate_scores(apps, COMMENT_MULTIPLIER_OLD, THREAD_MULTIPLIER_OLD)


class Migration(migrations.Migration):

    dependencies = [
        ("skole", "0041_add_daily_visit"),
    ]

    operations = [
        migrations.RunPython(
            code=forwards_func,
            reverse_code=backwards_func,
        ),
    ]
